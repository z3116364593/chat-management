[{"D:\\Vue\\通讯\\chat-management\\src\\App.tsx":"1","D:\\Vue\\通讯\\chat-management\\src\\reportWebVitals.ts":"2","D:\\Vue\\通讯\\chat-management\\src\\index.tsx":"3","D:\\Vue\\通讯\\chat-management\\src\\pages\\home\\index.tsx":"4","D:\\Vue\\通讯\\chat-management\\src\\router\\index.ts":"5","D:\\Vue\\通讯\\chat-management\\src\\components\\navbar\\index.tsx":"6","D:\\Vue\\通讯\\chat-management\\src\\pages\\register\\index.tsx":"7","D:\\Vue\\通讯\\chat-management\\src\\pages\\home\\view.tsx":"8","D:\\Vue\\通讯\\chat-management\\src\\components\\table\\index.tsx":"9","D:\\Vue\\通讯\\chat-management\\src\\api\\request.ts":"10","D:\\Vue\\通讯\\chat-management\\src\\api\\register.ts":"11","D:\\Vue\\通讯\\chat-management\\src\\api\\list.ts":"12","D:\\Vue\\通讯\\chat-management\\src\\pages\\login\\index.tsx":"13"},{"size":630,"mtime":1615192699187,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1606445568238,"results":"16","hashOfConfig":"17"},{"size":500,"mtime":1606445568238,"results":"18","hashOfConfig":"15"},{"size":2336,"mtime":1615194231650,"results":"19","hashOfConfig":"15"},{"size":150,"mtime":1608605467674,"results":"20","hashOfConfig":"17"},{"size":2615,"mtime":1615192904747,"results":"21","hashOfConfig":"15"},{"size":2547,"mtime":1615976107340,"results":"22","hashOfConfig":"15"},{"size":686,"mtime":1612857807324,"results":"23","hashOfConfig":"15"},{"size":6531,"mtime":1612858669898,"results":"24","hashOfConfig":"17"},{"size":1660,"mtime":1608792721381,"results":"25","hashOfConfig":"15"},{"size":141,"mtime":1608792026791,"results":"26","hashOfConfig":"17"},{"size":138,"mtime":1612840197022,"results":"27","hashOfConfig":"15"},{"size":2553,"mtime":1615192642739,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gkzgl7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"155nake",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"D:\\Vue\\通讯\\chat-management\\src\\App.tsx",[],"D:\\Vue\\通讯\\chat-management\\src\\reportWebVitals.ts",[],["60","61"],"D:\\Vue\\通讯\\chat-management\\src\\index.tsx",[],"D:\\Vue\\通讯\\chat-management\\src\\pages\\home\\index.tsx",[],["62","63"],"D:\\Vue\\通讯\\chat-management\\src\\router\\index.ts",["64"],"import Home from '../pages/home/index'\r\n\r\nexport default [\r\n    {\r\n        path:\"/home\" ,\r\n        component: Home,\r\n        exact: false\r\n    },\r\n]\r\n","D:\\Vue\\通讯\\chat-management\\src\\components\\navbar\\index.tsx",[],"D:\\Vue\\通讯\\chat-management\\src\\pages\\register\\index.tsx",[],"D:\\Vue\\通讯\\chat-management\\src\\pages\\home\\view.tsx",["65"],"D:\\Vue\\通讯\\chat-management\\src\\components\\table\\index.tsx",["66"],"import React, { useState, useEffect, useRef, useImperativeHandle, forwardRef } from 'react'\r\nimport { ReloadOutlined, ColumnHeightOutlined, SettingOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport { Table, Button, Tooltip, Menu, Dropdown, Checkbox } from 'antd';\r\nimport './css/index.css'\r\nimport { requestList } from '../../api/list'\r\n\r\nconst TableArea = forwardRef((props: any, ref: any): any => {\r\n    const [state, setState] = useState<any>({\r\n        densityList: [\r\n            {\r\n                name: '默认',\r\n                size: 'default',\r\n                active: false\r\n            },\r\n            {\r\n                name: '中等',\r\n                size: 'middle',\r\n                active: true\r\n            },\r\n            {\r\n                name: '紧凑',\r\n                size: 'small',\r\n                active: false\r\n            },\r\n        ],\r\n        densityAction: 'middle',\r\n        columns: [],\r\n        columnsRender: [],\r\n        indeterminate: false,\r\n        checkAll: true,\r\n        dataSource: [],\r\n        loading: false\r\n    });\r\n    const page = useRef<any>({page: 1, size: 10, total: 0})\r\n\r\n    const densityMenu = (\r\n        <Menu style={{ width: 80 }}>\r\n            {\r\n                state.densityList.map((item: any, index: number ) => (\r\n                    <Menu.Item onClick={() => {\r\n                        state.densityList.forEach((v: any) => v.active = false)\r\n                        item.active = true\r\n                        state.densityAction = item.size\r\n                        setState({...state})\r\n                    }} className={item.active ? 'menu-select' : ''} key={index}>{ item.name }</Menu.Item>\r\n                ))\r\n            }\r\n        </Menu>\r\n    )\r\n\r\n    const columnMenu = (\r\n        <Menu style={{minWidth: 150}}>\r\n            <div className=\"all-menu\">\r\n                <Checkbox onChange={(e) => {\r\n                    state.indeterminate = false\r\n                    state.checkAll = e.target.checked\r\n                    state.columns.forEach((item: any) => {\r\n                        item.checked = e.target.checked\r\n                    })\r\n                    setState({...state})\r\n                    setColumns()\r\n                }} indeterminate={state.indeterminate} checked={state.checkAll}>列展示</Checkbox>\r\n                <p onClick={() => {\r\n                    state.columns.forEach((item: any) => item.checked = true)\r\n                    setColumns()\r\n                }} className=\"btn-blue\">重置</p>\r\n            </div>\r\n            <Menu.Divider />\r\n            {\r\n                state.columns.map((item: any, index: number ) => (\r\n                    <div className=\"setting\" key={index}>\r\n                        <p style={{ cursor: 'move', margin: 0, display: 'inline-block' }}>\r\n                            <MoreOutlined />\r\n                            <MoreOutlined className=\"more\" />\r\n                        </p>\r\n                        <Checkbox onChange={(e) => {\r\n                            item.checked = e.target.checked\r\n                            let len: number = state.columns.filter((item: any) => item.checked).length\r\n                            if(len !== 0 && len !== state.columns.length) {\r\n                                state.indeterminate = true\r\n                            } else {\r\n                                state.indeterminate = false\r\n                            }\r\n                            state.checkAll = state.columns.every((item: any) => item.checked)\r\n                            setState({...state})\r\n                            setColumns()\r\n                        }} checked={item.checked}>{ item.title }</Checkbox>\r\n                    </div>\r\n                ))\r\n            }\r\n        </Menu>\r\n    )\r\n\r\n    useImperativeHandle(ref, ()=>({\r\n        state,\r\n        setState,\r\n        getList,\r\n        page\r\n    }))\r\n\r\n    useEffect(() => {\r\n        getList()\r\n        let arr: any[] = props.columns\r\n        arr.forEach((item: any) => {\r\n            item.checked = true\r\n        })\r\n        state.columns = arr\r\n        state.columnsRender = arr\r\n        setState({...state})\r\n    }, [])\r\n\r\n    //设置列\r\n    const setColumns = (): void => {\r\n        let arr: any[] = state.columns.filter((item: any) => item.checked)\r\n        state.columnsRender = arr\r\n        setState({...state})\r\n    }\r\n\r\n    //获取列表\r\n    const getList = async (): Promise<any> => {\r\n        state.loading = true\r\n        setState({...state})\r\n        let params: any = {\r\n            page: page.current.page,\r\n            size: page.current.size\r\n        }\r\n        let response: any = await requestList(props.listUrl, params)\r\n        page.current.total = response.data.total\r\n        state.dataSource = response.data.list\r\n        state.loading = false\r\n        setState({...state})\r\n    }\r\n\r\n    return(\r\n        <div className=\"table-area\">\r\n            <div className=\"table-action\">\r\n                <span></span>\r\n                <div>\r\n                    <Button type=\"primary\" style={{ marginRight: 20, fontSize: '14px!important' }}>新增</Button>\r\n                    <Tooltip title=\"刷新\"><ReloadOutlined onClick={() => {\r\n                        getList()\r\n                    }} className=\"table-icon\" /></Tooltip>\r\n                    <Dropdown overlay={densityMenu} trigger={['click']}>\r\n                        <Tooltip title=\"密度\"><ColumnHeightOutlined className=\"table-icon\" /></Tooltip>\r\n                    </Dropdown>\r\n                    <Dropdown overlay={columnMenu} trigger={['click']}>\r\n                        <Tooltip title=\"列设置\"><SettingOutlined className=\"table-icon\" /></Tooltip>\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n            <Table pagination={{\r\n                current: page.current.page,\r\n                pageSize: page.current.size,\r\n                total: page.current.total,\r\n                onChange: (current: any, pageSize: any) => {\r\n                    page.current.page = current\r\n                    page.current.size = pageSize\r\n                    getList()\r\n                },\r\n                onShowSizeChange: (current: any, size: any) => {\r\n                    page.current.page = current\r\n                    page.current.size = size\r\n                    getList()\r\n                }\r\n            }} loading={state.loading} dataSource={state.dataSource} columns={state.columnsRender} size={state.densityAction} />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default TableArea\r\n","D:\\Vue\\通讯\\chat-management\\src\\api\\request.ts",[],"D:\\Vue\\通讯\\chat-management\\src\\api\\register.ts",[],"D:\\Vue\\通讯\\chat-management\\src\\api\\list.ts",[],"D:\\Vue\\通讯\\chat-management\\src\\pages\\login\\index.tsx",[],["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"69","replacedBy":"73"},{"ruleId":"71","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":1,"nodeType":"77","endLine":9,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":15,"column":8,"nodeType":"80","endLine":15,"endColumn":10,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":110,"column":8,"nodeType":"80","endLine":110,"endColumn":10,"suggestions":"83"},{"ruleId":"69","replacedBy":"84"},{"ruleId":"71","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history.location.pathname' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'getList', 'props.columns', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["89"],["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [props.history.location.pathname, state]",{"range":"94","text":"95"},"Update the dependencies array to be: [getList, props.columns, state]",{"range":"96","text":"97"},[449,451],"[props.history.location.pathname, state]",[4132,4134],"[getList, props.columns, state]"]